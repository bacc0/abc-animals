/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_app";
exports.ids = ["pages/_app"];
exports.modules = {

/***/ "./src/components/MainView.js":
/*!************************************!*\
  !*** ./src/components/MainView.js ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data */ \"./src/data.js\");\n/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! framer-motion */ \"framer-motion\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([framer_motion__WEBPACK_IMPORTED_MODULE_3__]);\nframer_motion__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n// import './sprite_60fps.css'\n\n\n// const animals = [\n//     {\n//         \"id\": \"0\",\n//         \"letter\": \"A\",\n//         \"type\": \"alpaca\",\n//         \"name\": 'Alpaca',\n//         \"audio\": 'alpaca',\n//     },\n//     {\n//         \"id\": \"1\",\n//         \"letter\": \"B\",\n//         \"type\": \"bear\",\n//         \"name\": 'Bear',\n//         \"audio\": 'bear',\n//     },\n//     {\n//         \"id\": \"2\",\n//         \"letter\": \"C\",\n//         \"type\": \"cat\",\n//         \"name\": 'Cat',\n//         \"audio\": 'cat',\n//     },\n//     {\n//         \"id\": \"3\",\n//         \"letter\": \"D\",\n//         \"type\": \"donkey\",\n//         \"name\": 'Donkey',\n//         \"audio\": 'donkey',\n//     },\n//     {\n//         \"id\": \"4\",\n//         \"letter\": \"P\",\n//         \"type\": \"pig\",\n//         \"name\": 'Pig',\n//         \"audio\": 'pig',\n//     },\n// ]\n// const colors = [\n//     \"#DEFFB7\", \"#FFFFB5\", \"#C6FFF2\", \"#FFBEAB\", \"#ACE6FF\", \"#FFE0AC\"\n// ]\nconst MainView = ({ count , setCount , countCoors , setCountColors , visibleButtons , setVisibleButtons  })=>{\n    const [array, setArray] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0); //15\n    // const [count, setCount] = useState(0);\n    // const [countCoors, setCountColors] = useState(0);\n    const [visible, setVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    // const [visibleButtons, setVisibleButtons] = useState(true);\n    const viewChanger = ()=>{\n        setVisible(true);\n        setTimeout(()=>{\n            // console.log('eeee')\n            setVisible(false);\n        }, 1500);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        viewChanger();\n    }, [\n        count\n    ]);\n    const countHandleClick = ()=>{\n        if (countCoors < _data__WEBPACK_IMPORTED_MODULE_2__.colors.length - 1) {\n            setCountColors(countCoors + 1);\n        } else {\n            setCountColors(0);\n        }\n        viewChanger();\n        setVisibleButtons(false);\n        setInterval(()=>{\n            setVisibleButtons(true);\n        }, 3000);\n        if (count !== _data__WEBPACK_IMPORTED_MODULE_2__.animals.length - 1) {\n            setCount(count + 1);\n        } else {\n            setCount(0);\n        }\n    };\n    const countHandleClickPrev = ()=>{\n        setVisibleButtons(false);\n        setInterval(()=>{\n            setVisibleButtons(true);\n        }, 3000);\n        if (countCoors < _data__WEBPACK_IMPORTED_MODULE_2__.colors.length - 1) {\n            setCountColors(countCoors + 1);\n        } else {\n            setCountColors(0);\n        }\n        viewChanger();\n        if (count > 0) {\n            setCount(count - 1);\n        } else {\n            setCount(_data__WEBPACK_IMPORTED_MODULE_2__.animals.length - 1);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    position: \"relative\",\n                    left: 10\n                },\n                children: [\n                    visible && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_3__.motion.h1, {\n                        initial: {\n                            y: 0,\n                            x: -10,\n                            scale: 0.2,\n                            opacity: 0\n                        },\n                        animate: {\n                            y: 0,\n                            x: -10,\n                            scale: 1,\n                            opacity: 1\n                        },\n                        transition: {\n                            delay: .2,\n                            duration: 1.02,\n                            type: \"spring\",\n                            stiffness: 220\n                        },\n                        style: {\n                            fontSize: 350,\n                            margin: 0,\n                            color: \"#000000\"\n                        },\n                        children: _data__WEBPACK_IMPORTED_MODULE_2__.animals[count].letter\n                    }, void 0, false, {\n                        fileName: \"/Users/trayanov/Work/abc-animal/src/components/MainView.js\",\n                        lineNumber: 140,\n                        columnNumber: 21\n                    }, undefined),\n                    !visible && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_3__.motion.div, {\n                        onClick: countHandleClick,\n                        onTouchStart: countHandleClick,\n                        initial: {\n                            y: 0,\n                            x: -10,\n                            scale: 0.2,\n                            opacity: 0\n                        },\n                        animate: {\n                            y: 0,\n                            x: -10,\n                            scale: 1,\n                            opacity: 1\n                        },\n                        transition: {\n                            delay: .2,\n                            duration: 1.02,\n                            type: \"spring\",\n                            stiffness: 220\n                        },\n                        style: {\n                            backgroundImage: `url('/images/${_data__WEBPACK_IMPORTED_MODULE_2__.animals[count].type}.svg')`,\n                            backgroundSize: \"cover\",\n                            backgroundRepeat: \"no-repeat\",\n                            backgroundPosition: `-${0}px 0px`,\n                            display: \"block\",\n                            minHeight: 300,\n                            minWidth: 300\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/trayanov/Work/abc-animal/src/components/MainView.js\",\n                        lineNumber: 160,\n                        columnNumber: 21\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            display: \"block\",\n                            minHeight: 70,\n                            marginTop: 20\n                        },\n                        children: visibleButtons && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_3__.motion.h1, {\n                            style: {\n                                margin: 0,\n                                color: \"#000000\",\n                                fontSize: 50,\n                                textAlign: \"center\"\n                            },\n                            initial: {\n                                y: 30,\n                                scale: 0,\n                                opacity: 1\n                            },\n                            animate: {\n                                y: 0,\n                                scale: 1,\n                                opacity: 1\n                            },\n                            transition: {\n                                delay: 2,\n                                duration: 1.02,\n                                type: \"spring\",\n                                stiffness: 320\n                            },\n                            children: _data__WEBPACK_IMPORTED_MODULE_2__.animals[count].name\n                        }, void 0, false, {\n                            fileName: \"/Users/trayanov/Work/abc-animal/src/components/MainView.js\",\n                            lineNumber: 193,\n                            columnNumber: 25\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/trayanov/Work/abc-animal/src/components/MainView.js\",\n                        lineNumber: 185,\n                        columnNumber: 17\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/trayanov/Work/abc-animal/src/components/MainView.js\",\n                lineNumber: 138,\n                columnNumber: 13\n            }, undefined),\n            visibleButtons && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_3__.motion.div, {\n                initial: {\n                    opacity: 0\n                },\n                animate: {\n                    opacity: 1\n                },\n                transition: {\n                    delay: 1,\n                    duration: 2\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        style: {\n                            position: \"absolute\",\n                            top: visibleButtons ? \"62vh\" : 0,\n                            left: 8,\n                            width: 70,\n                            height: 70,\n                            border: \"1.5px solid #777777\",\n                            background: \"#FFFFFFaa\",\n                            borderRadius: 100,\n                            fontSize: 30,\n                            fontWeight: 700,\n                            color: \"#777777\",\n                            backdropFilter: \"blur(2px)\",\n                            \"-webkit-backdrop-filter\": \"blur(2px)\"\n                        },\n                        onClick: countHandleClickPrev,\n                        children: \"<\"\n                    }, void 0, false, {\n                        fileName: \"/Users/trayanov/Work/abc-animal/src/components/MainView.js\",\n                        lineNumber: 232,\n                        columnNumber: 21\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        disabled: !visibleButtons,\n                        style: {\n                            position: \"absolute\",\n                            top: visibleButtons ? \"62vh\" : 0,\n                            right: 8,\n                            width: 70,\n                            height: 70,\n                            border: \"1.5px solid #777777\",\n                            background: \"#FFFFFFaa\",\n                            borderRadius: 100,\n                            fontSize: 30,\n                            fontWeight: 700,\n                            color: \"#777777\",\n                            backdropFilter: \"blur(2px)\",\n                            \"-webkit-backdrop-filter\": \"blur(2px)\"\n                        },\n                        onClick: countHandleClick,\n                        children: \">\"\n                    }, void 0, false, {\n                        fileName: \"/Users/trayanov/Work/abc-animal/src/components/MainView.js\",\n                        lineNumber: 257,\n                        columnNumber: 21\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/trayanov/Work/abc-animal/src/components/MainView.js\",\n                lineNumber: 220,\n                columnNumber: 17\n            }, undefined)\n        ]\n    }, void 0, true);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MainView); // const MyComponent = () => {\n //     const [array, setArray] = useState(15);\n //     const [count, setCount] = useState(0);\n //     const [markerView, setMarkerView] = useState(false);\n //     useEffect(() => {\n //         setTimeout(() => {\n //             setMarkerView(true)\n //             setArray(15)\n //         }, 1200);\n //     }, []);\n //     const onChange = () => {\n //         setTimeout(() => {\n //             setMarkerView(true)\n //             setArray(15)\n //         }, 1200);\n //     }\n //     const handleClick = () => {\n //         setMarkerView(true)\n //         setArray(15)\n //     }\n //     const countHandleClick = () => {\n //         if (count !== animals.length - 1) {\n //             setCount(count + 1)\n //             setMarkerView(false)\n //             onChange()\n //         } else {\n //             setCount(0)\n //             setMarkerView(false)\n //             onChange()\n //         }\n //     }\n //     useEffect(() => {\n //         // console.log(array)\n //         setTimeout(() => {\n //             if (array < 35040) {\n //                 setArray(array + 292)\n //             }\n //         }, 5);\n //     }, [array, markerView]);\n //     return (\n //         <div style={{ position: 'relative', left: 10 }}>\n //             {!markerView && (\n //                 <motion.div\n //                     initial={{\n //                         y: -430,\n //                         scale: 0.9,\n //                         opacity: 0\n //                     }}\n //                     animate={{ y: 0, scale: 0.9, opacity: 1 }}\n //                     transition={{\n //                         delay: .2,\n //                         duration: 1.02,\n //                         type: 'spring', stiffness: 220\n //                     }}\n //                     style={{\n //                         // backgroundColor: '#33333333',\n //                         backgroundImage: `url('/images/${animals[count].type}.svg')`,\n //                         backgroundSize: 'cover',\n //                         backgroundRepeat: 'no-repeat',\n //                         backgroundPosition: `0px 0px`,\n //                         // backgroundPosition: `-${292}px 0px`,\n //                         display: 'block',\n //                         minHeight: 200,\n //                         minWidth: 300,\n //                     }}\n //                 />\n //             )}\n //             {markerView && (\n //                 <motion.div\n //                     initial={{\n //                         y: -10,\n //                         scale: 1,\n //                         opacity: 1\n //                     }}\n //                     animate={{ y: 0, scale: 1, opacity: 1 }}\n //                     transition={{\n //                         delay: .0,\n //                         duration: 0.02,\n //                         type: 'spring', stiffness: 220\n //                     }}\n //                     style={{ position: 'relative', left: 14 }}\n //                 >\n //                     <motion.div\n //                         initial={{\n //                             scale: 0.9,\n //                         }}\n //                         animate={{ scale: 1.05 }}\n //                         transition={{\n //                             delay: 1.3,\n //                             duration: 0.02,\n //                             type: 'spring', stiffness: 500\n //                         }}\n //                         style={{\n //                             backgroundImage: `url('/images/${animals[count].type}.svg')`,\n //                             backgroundSize: 'cover',\n //                             backgroundRepeat: 'no-repeat',\n //                             backgroundPosition: `-${array}px 0px`,\n //                             // backgroundPosition: `-${292}px 0px`,\n //                             display: 'block',\n //                             minHeight: 200,\n //                             minWidth: 300,\n //                         }}\n //                     />\n //                 </motion.div>\n //             )}\n //             <button onClick={handleClick}>click</button>\n //             <button onClick={countHandleClick}>next</button>\n //         </div>\n //     );\n // };\n // export default MyComponent;\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/MainView.js\n");

/***/ }),

/***/ "./src/components/Sounds.js":
/*!**********************************!*\
  !*** ./src/components/Sounds.js ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data */ \"./src/data.js\");\n/* harmony import */ var react_audio_player__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-audio-player */ \"react-audio-player\");\n/* harmony import */ var react_audio_player__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_audio_player__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! framer-motion */ \"framer-motion\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([framer_motion__WEBPACK_IMPORTED_MODULE_4__]);\nframer_motion__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\nconst Sounds = ({ count , visibleButtons  })=>{\n    const [switchVisible, setSwitchVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [autoplay, setAutoplay] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [autoplayType, setAutoplayType] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [textButton, setTextButton] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"MUTE\");\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setTimeout(()=>{\n            setSwitchVisible(true);\n        }, 3400);\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setAutoplayType(false);\n        setTimeout(()=>{\n            setAutoplayType(true);\n        }, 100);\n    }, [\n        count\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setSwitchVisible(false);\n        setTimeout(()=>{\n            setSwitchVisible(true);\n        }, 3400);\n    }, [\n        count\n    ]);\n    const handleClick = ()=>{\n        setAutoplay(!autoplay);\n        setTextButton(textButton === \"PLAY\" ? \"MUTE\" : \"PLAY\");\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            color: \"darkblue\"\n        },\n        children: [\n            visibleButtons && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_4__.motion.button, {\n                initial: {\n                    opacity: 0\n                },\n                animate: {\n                    opacity: 1\n                },\n                transition: {\n                    delay: 0.2,\n                    duration: 1\n                },\n                style: {\n                    width: 70,\n                    height: 70,\n                    borderRadius: 100,\n                    border: `1.5px solid ${textButton === \"PLAY\" ? \"#154B19\" : \"#C60001\"}`,\n                    fontSize: 18,\n                    fontWeight: 600,\n                    color: \"#FFFFFF\",\n                    backgroundColor: `${textButton === \"PLAY\" ? \"#2e7d32\" : \"#ff1744\"}`,\n                    position: \"absolute\",\n                    top: 12,\n                    left: 0,\n                    right: 0,\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\"\n                },\n                onClick: handleClick,\n                children: textButton\n            }, void 0, false, {\n                fileName: \"/Users/trayanov/Work/abc-animal/src/components/Sounds.js\",\n                lineNumber: 51,\n                columnNumber: 21\n            }, undefined),\n            !switchVisible && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((react_audio_player__WEBPACK_IMPORTED_MODULE_3___default()), {\n                    src: `/soundsType/${_data__WEBPACK_IMPORTED_MODULE_2__.animals[count].type}.mp3`,\n                    autoPlay: true,\n                    volume: autoplayType ? 1 : 0\n                }, void 0, false, {\n                    fileName: \"/Users/trayanov/Work/abc-animal/src/components/Sounds.js\",\n                    lineNumber: 95,\n                    columnNumber: 31\n                }, undefined)\n            }, void 0, false),\n            switchVisible && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((react_audio_player__WEBPACK_IMPORTED_MODULE_3___default()), {\n                src: `/sounds/${_data__WEBPACK_IMPORTED_MODULE_2__.animals[count].type}.mp3`,\n                autoPlay: true,\n                // controls\n                volume: autoplay ? 0.3 : 0\n            }, void 0, false, {\n                fileName: \"/Users/trayanov/Work/abc-animal/src/components/Sounds.js\",\n                lineNumber: 108,\n                columnNumber: 26\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/trayanov/Work/abc-animal/src/components/Sounds.js\",\n        lineNumber: 45,\n        columnNumber: 11\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Sounds);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/Sounds.js\n");

/***/ }),

/***/ "./src/data.js":
/*!*********************!*\
  !*** ./src/data.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"animals\": () => (/* binding */ animals),\n/* harmony export */   \"colors\": () => (/* binding */ colors)\n/* harmony export */ });\nconst animals = [\n    {\n        \"id\": \"0\",\n        \"letter\": \"A\",\n        \"type\": \"alpaca\",\n        \"name\": \"Alpaca\",\n        \"audio\": \"alpaca\"\n    },\n    {\n        \"id\": \"1\",\n        \"letter\": \"B\",\n        \"type\": \"bear\",\n        \"name\": \"Bear\",\n        \"audio\": \"bear\"\n    },\n    {\n        \"id\": \"2\",\n        \"letter\": \"C\",\n        \"type\": \"cat\",\n        \"name\": \"Cat\",\n        \"audio\": \"cat\"\n    },\n    {\n        \"id\": \"3\",\n        \"letter\": \"D\",\n        \"type\": \"donkey\",\n        \"name\": \"Donkey\",\n        \"audio\": \"donkey\"\n    },\n    {\n        \"id\": \"4\",\n        \"letter\": \"E\",\n        \"type\": \"elephant\",\n        \"name\": \"Elephant\",\n        \"audio\": \"elephant\"\n    },\n    {\n        \"id\": \"5\",\n        \"letter\": \"F\",\n        \"type\": \"frog\",\n        \"name\": \"Frog\",\n        \"audio\": \"frog\"\n    },\n    {\n        \"id\": \"6\",\n        \"letter\": \"G\",\n        \"type\": \"giraffe\",\n        \"name\": \"Giraffe\",\n        \"audio\": \"giraffe\"\n    },\n    {\n        \"id\": \"7\",\n        \"letter\": \"H\",\n        \"type\": \"hyena\",\n        \"name\": \"Hyena\",\n        \"audio\": \"hyena\"\n    },\n    {\n        \"id\": \"8\",\n        \"letter\": \"J\",\n        \"type\": \"jaguar\",\n        \"name\": \"Jaguar\",\n        \"audio\": \"jaguar\"\n    },\n    {\n        \"id\": \"9\",\n        \"letter\": \"K\",\n        \"type\": \"koala\",\n        \"name\": \"Koala\",\n        \"audio\": \"koala\"\n    },\n    {\n        \"id\": \"10\",\n        \"letter\": \"L\",\n        \"type\": \"lion\",\n        \"name\": \"Lion\",\n        \"audio\": \"lion\"\n    },\n    {\n        \"id\": \"11\",\n        \"letter\": \"M\",\n        \"type\": \"monkey\",\n        \"name\": \"Monkey\",\n        \"audio\": \"monkey\"\n    },\n    {\n        \"id\": \"12\",\n        \"letter\": \"N\",\n        \"type\": \"nurseShark\",\n        \"name\": \"Nurse Shark\",\n        \"audio\": \"nurseShark\"\n    },\n    {\n        \"id\": \"13\",\n        \"letter\": \"O\",\n        \"type\": \"owl\",\n        \"name\": \"Owl\",\n        \"audio\": \"owl\"\n    },\n    {\n        \"id\": \"14\",\n        \"letter\": \"P\",\n        \"type\": \"pig\",\n        \"name\": \"Pig\",\n        \"audio\": \"pig\"\n    }\n];\nconst colors = [\n    \"#DEFFB7\",\n    \"#FFFFB5\",\n    \"#C6FFF2\",\n    \"#FFBEAB\",\n    \"#ACE6FF\",\n    \"#FFE0AC\"\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGF0YS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPLE1BQU1BLFVBQVU7SUFDbEI7UUFDSyxNQUFNO1FBQ04sVUFBVTtRQUNWLFFBQVE7UUFDUixRQUFRO1FBQ1IsU0FBUztJQUNkO0lBQ0E7UUFDSyxNQUFNO1FBQ04sVUFBVTtRQUNWLFFBQVE7UUFDUixRQUFRO1FBQ1IsU0FBUztJQUNkO0lBQ0E7UUFDSyxNQUFNO1FBQ04sVUFBVTtRQUNWLFFBQVE7UUFDUixRQUFRO1FBQ1IsU0FBUztJQUNkO0lBQ0E7UUFDSyxNQUFNO1FBQ04sVUFBVTtRQUNWLFFBQVE7UUFDUixRQUFRO1FBQ1IsU0FBUztJQUNkO0lBQ0E7UUFDSyxNQUFNO1FBQ04sVUFBVTtRQUNWLFFBQVE7UUFDUixRQUFRO1FBQ1IsU0FBUztJQUNkO0lBQ0E7UUFDSyxNQUFNO1FBQ04sVUFBVTtRQUNWLFFBQVE7UUFDUixRQUFRO1FBQ1IsU0FBUztJQUNkO0lBQ0E7UUFDSyxNQUFNO1FBQ04sVUFBVTtRQUNWLFFBQVE7UUFDUixRQUFRO1FBQ1IsU0FBUztJQUNkO0lBRUE7UUFDSyxNQUFNO1FBQ04sVUFBVTtRQUNWLFFBQVE7UUFDUixRQUFRO1FBQ1IsU0FBUztJQUNkO0lBQ0E7UUFDSyxNQUFNO1FBQ04sVUFBVTtRQUNWLFFBQVE7UUFDUixRQUFRO1FBQ1IsU0FBUztJQUNkO0lBQ0E7UUFDSyxNQUFNO1FBQ04sVUFBVTtRQUNWLFFBQVE7UUFDUixRQUFRO1FBQ1IsU0FBUztJQUNkO0lBQ0E7UUFDSyxNQUFNO1FBQ04sVUFBVTtRQUNWLFFBQVE7UUFDUixRQUFRO1FBQ1IsU0FBUztJQUNkO0lBQ0E7UUFDSyxNQUFNO1FBQ04sVUFBVTtRQUNWLFFBQVE7UUFDUixRQUFRO1FBQ1IsU0FBUztJQUNkO0lBQ0E7UUFDSyxNQUFNO1FBQ04sVUFBVTtRQUNWLFFBQVE7UUFDUixRQUFRO1FBQ1IsU0FBUztJQUNkO0lBQ0E7UUFDSyxNQUFNO1FBQ04sVUFBVTtRQUNWLFFBQVE7UUFDUixRQUFRO1FBQ1IsU0FBUztJQUNkO0lBTUE7UUFDSyxNQUFNO1FBQ04sVUFBVTtRQUNWLFFBQVE7UUFDUixRQUFRO1FBQ1IsU0FBUztJQUNkO0NBQ0o7QUFFTSxNQUFNQyxTQUFTO0lBQ2pCO0lBQVc7SUFBVztJQUFXO0lBQVc7SUFBVztDQUMzRCIsInNvdXJjZXMiOlsid2VicGFjazovL2FiYy1hbmltYWxzLy4vc3JjL2RhdGEuanM/MGU1YSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgYW5pbWFscyA9IFtcbiAgICAge1xuICAgICAgICAgIFwiaWRcIjogXCIwXCIsXG4gICAgICAgICAgXCJsZXR0ZXJcIjogXCJBXCIsXG4gICAgICAgICAgXCJ0eXBlXCI6IFwiYWxwYWNhXCIsXG4gICAgICAgICAgXCJuYW1lXCI6ICdBbHBhY2EnLFxuICAgICAgICAgIFwiYXVkaW9cIjogJ2FscGFjYScsXG4gICAgIH0sXG4gICAgIHtcbiAgICAgICAgICBcImlkXCI6IFwiMVwiLFxuICAgICAgICAgIFwibGV0dGVyXCI6IFwiQlwiLFxuICAgICAgICAgIFwidHlwZVwiOiBcImJlYXJcIixcbiAgICAgICAgICBcIm5hbWVcIjogJ0JlYXInLFxuICAgICAgICAgIFwiYXVkaW9cIjogJ2JlYXInLFxuICAgICB9LFxuICAgICB7XG4gICAgICAgICAgXCJpZFwiOiBcIjJcIixcbiAgICAgICAgICBcImxldHRlclwiOiBcIkNcIixcbiAgICAgICAgICBcInR5cGVcIjogXCJjYXRcIixcbiAgICAgICAgICBcIm5hbWVcIjogJ0NhdCcsXG4gICAgICAgICAgXCJhdWRpb1wiOiAnY2F0JyxcbiAgICAgfSxcbiAgICAge1xuICAgICAgICAgIFwiaWRcIjogXCIzXCIsXG4gICAgICAgICAgXCJsZXR0ZXJcIjogXCJEXCIsXG4gICAgICAgICAgXCJ0eXBlXCI6IFwiZG9ua2V5XCIsXG4gICAgICAgICAgXCJuYW1lXCI6ICdEb25rZXknLFxuICAgICAgICAgIFwiYXVkaW9cIjogJ2RvbmtleScsXG4gICAgIH0sXG4gICAgIHtcbiAgICAgICAgICBcImlkXCI6IFwiNFwiLFxuICAgICAgICAgIFwibGV0dGVyXCI6IFwiRVwiLFxuICAgICAgICAgIFwidHlwZVwiOiBcImVsZXBoYW50XCIsXG4gICAgICAgICAgXCJuYW1lXCI6ICdFbGVwaGFudCcsXG4gICAgICAgICAgXCJhdWRpb1wiOiAnZWxlcGhhbnQnLFxuICAgICB9LFxuICAgICB7XG4gICAgICAgICAgXCJpZFwiOiBcIjVcIixcbiAgICAgICAgICBcImxldHRlclwiOiBcIkZcIixcbiAgICAgICAgICBcInR5cGVcIjogXCJmcm9nXCIsXG4gICAgICAgICAgXCJuYW1lXCI6ICdGcm9nJyxcbiAgICAgICAgICBcImF1ZGlvXCI6ICdmcm9nJyxcbiAgICAgfSxcbiAgICAge1xuICAgICAgICAgIFwiaWRcIjogXCI2XCIsXG4gICAgICAgICAgXCJsZXR0ZXJcIjogXCJHXCIsXG4gICAgICAgICAgXCJ0eXBlXCI6IFwiZ2lyYWZmZVwiLFxuICAgICAgICAgIFwibmFtZVwiOiAnR2lyYWZmZScsXG4gICAgICAgICAgXCJhdWRpb1wiOiAnZ2lyYWZmZScsXG4gICAgIH0sXG5cbiAgICAge1xuICAgICAgICAgIFwiaWRcIjogXCI3XCIsXG4gICAgICAgICAgXCJsZXR0ZXJcIjogXCJIXCIsXG4gICAgICAgICAgXCJ0eXBlXCI6IFwiaHllbmFcIixcbiAgICAgICAgICBcIm5hbWVcIjogJ0h5ZW5hJyxcbiAgICAgICAgICBcImF1ZGlvXCI6ICdoeWVuYScsXG4gICAgIH0sXG4gICAgIHtcbiAgICAgICAgICBcImlkXCI6IFwiOFwiLFxuICAgICAgICAgIFwibGV0dGVyXCI6IFwiSlwiLFxuICAgICAgICAgIFwidHlwZVwiOiBcImphZ3VhclwiLFxuICAgICAgICAgIFwibmFtZVwiOiAnSmFndWFyJyxcbiAgICAgICAgICBcImF1ZGlvXCI6ICdqYWd1YXInLFxuICAgICB9LFxuICAgICB7XG4gICAgICAgICAgXCJpZFwiOiBcIjlcIixcbiAgICAgICAgICBcImxldHRlclwiOiBcIktcIixcbiAgICAgICAgICBcInR5cGVcIjogXCJrb2FsYVwiLFxuICAgICAgICAgIFwibmFtZVwiOiAnS29hbGEnLFxuICAgICAgICAgIFwiYXVkaW9cIjogJ2tvYWxhJyxcbiAgICAgfSxcbiAgICAge1xuICAgICAgICAgIFwiaWRcIjogXCIxMFwiLFxuICAgICAgICAgIFwibGV0dGVyXCI6IFwiTFwiLFxuICAgICAgICAgIFwidHlwZVwiOiBcImxpb25cIixcbiAgICAgICAgICBcIm5hbWVcIjogJ0xpb24nLFxuICAgICAgICAgIFwiYXVkaW9cIjogJ2xpb24nLFxuICAgICB9LFxuICAgICB7XG4gICAgICAgICAgXCJpZFwiOiBcIjExXCIsXG4gICAgICAgICAgXCJsZXR0ZXJcIjogXCJNXCIsXG4gICAgICAgICAgXCJ0eXBlXCI6IFwibW9ua2V5XCIsXG4gICAgICAgICAgXCJuYW1lXCI6ICdNb25rZXknLFxuICAgICAgICAgIFwiYXVkaW9cIjogJ21vbmtleScsXG4gICAgIH0sXG4gICAgIHtcbiAgICAgICAgICBcImlkXCI6IFwiMTJcIixcbiAgICAgICAgICBcImxldHRlclwiOiBcIk5cIixcbiAgICAgICAgICBcInR5cGVcIjogXCJudXJzZVNoYXJrXCIsXG4gICAgICAgICAgXCJuYW1lXCI6ICdOdXJzZSBTaGFyaycsXG4gICAgICAgICAgXCJhdWRpb1wiOiAnbnVyc2VTaGFyaycsXG4gICAgIH0sXG4gICAgIHtcbiAgICAgICAgICBcImlkXCI6IFwiMTNcIixcbiAgICAgICAgICBcImxldHRlclwiOiBcIk9cIixcbiAgICAgICAgICBcInR5cGVcIjogXCJvd2xcIixcbiAgICAgICAgICBcIm5hbWVcIjogJ093bCcsXG4gICAgICAgICAgXCJhdWRpb1wiOiAnb3dsJyxcbiAgICAgfSxcblxuXG5cblxuXG4gICAgIHtcbiAgICAgICAgICBcImlkXCI6IFwiMTRcIixcbiAgICAgICAgICBcImxldHRlclwiOiBcIlBcIixcbiAgICAgICAgICBcInR5cGVcIjogXCJwaWdcIixcbiAgICAgICAgICBcIm5hbWVcIjogJ1BpZycsXG4gICAgICAgICAgXCJhdWRpb1wiOiAncGlnJyxcbiAgICAgfSxcbl1cblxuZXhwb3J0IGNvbnN0IGNvbG9ycyA9IFtcbiAgICAgXCIjREVGRkI3XCIsIFwiI0ZGRkZCNVwiLCBcIiNDNkZGRjJcIiwgXCIjRkZCRUFCXCIsIFwiI0FDRTZGRlwiLCBcIiNGRkUwQUNcIlxuXSJdLCJuYW1lcyI6WyJhbmltYWxzIiwiY29sb3JzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/data.js\n");

/***/ }),

/***/ "./src/pages/_app.js":
/*!***************************!*\
  !*** ./src/pages/_app.js ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _styles_App_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../styles/App.css */ \"./src/styles/App.css\");\n/* harmony import */ var _styles_App_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_App_css__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_MainView__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/MainView */ \"./src/components/MainView.js\");\n/* harmony import */ var _components_Sounds__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/Sounds */ \"./src/components/Sounds.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../data */ \"./src/data.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_components_MainView__WEBPACK_IMPORTED_MODULE_3__, _components_Sounds__WEBPACK_IMPORTED_MODULE_4__]);\n([_components_MainView__WEBPACK_IMPORTED_MODULE_3__, _components_Sounds__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n// import { useEventCallback } from '@material-ui/core';\n\nfunction App() {\n    const [count, setCount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [countCoors, setCountColors] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [bgColor, setBgColor] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"#ccff90\");\n    const [visibleButtons, setVisibleButtons] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [visibleSounds, setVisibleSounds] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setVisibleSounds(false);\n        setTimeout(()=>{\n            setVisibleSounds(true);\n        }, 100);\n    }, [\n        count\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setBgColor(_data__WEBPACK_IMPORTED_MODULE_5__.colors[countCoors]);\n    }, [\n        countCoors\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            backgroundColor: bgColor,\n            transition: \"background-color 2s ease-out\",\n            \"-webkit-transition\": \"background-color 2s ease-out\",\n            \" -moz-transition\": \"background-color 2s ease-out\"\n        },\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"header\", {\n            className: \"App-header\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: [\n                    visibleSounds && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Sounds__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                        count: count,\n                        visibleButtons: visibleButtons\n                    }, void 0, false, {\n                        fileName: \"/Users/trayanov/Work/abc-animal/src/pages/_app.js\",\n                        lineNumber: 43,\n                        columnNumber: 25\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_MainView__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        count: count,\n                        setCount: setCount,\n                        setBgColor: setBgColor,\n                        countCoors: countCoors,\n                        setCountColors: setCountColors,\n                        bgColor: bgColor,\n                        visibleButtons: visibleButtons,\n                        setVisibleButtons: setVisibleButtons\n                    }, void 0, false, {\n                        fileName: \"/Users/trayanov/Work/abc-animal/src/pages/_app.js\",\n                        lineNumber: 48,\n                        columnNumber: 21\n                    }, this)\n                ]\n            }, void 0, true)\n        }, void 0, false, {\n            fileName: \"/Users/trayanov/Work/abc-animal/src/pages/_app.js\",\n            lineNumber: 40,\n            columnNumber: 13\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/trayanov/Work/abc-animal/src/pages/_app.js\",\n        lineNumber: 33,\n        columnNumber: 9\n    }, this);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (App);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvX2FwcC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFtRDtBQUV4QjtBQUNrQjtBQUNKO0FBQ3pDLHdEQUF3RDtBQUNmO0FBR3pDLFNBQVNPLE1BQU07SUFFWCxNQUFNLENBQUNDLE9BQU9DLFNBQVMsR0FBR1IsK0NBQVFBLENBQUM7SUFDbkMsTUFBTSxDQUFDUyxZQUFZQyxlQUFlLEdBQUdWLCtDQUFRQSxDQUFDO0lBQzlDLE1BQU0sQ0FBQ1csU0FBU0MsV0FBVyxHQUFHWiwrQ0FBUUEsQ0FBQztJQUN2QyxNQUFNLENBQUNhLGdCQUFnQkMsa0JBQWtCLEdBQUdkLCtDQUFRQSxDQUFDLElBQUk7SUFDekQsTUFBTSxDQUFDZSxlQUFlQyxpQkFBaUIsR0FBR2hCLCtDQUFRQSxDQUFDLElBQUk7SUFFdkRDLGdEQUFTQSxDQUFDLElBQU07UUFDWmUsaUJBQWlCLEtBQUs7UUFFdEJDLFdBQVcsSUFBTTtZQUNiRCxpQkFBaUIsSUFBSTtRQUV6QixHQUFHO0lBQ1AsR0FBRztRQUFDVDtLQUFNO0lBRVZOLGdEQUFTQSxDQUFDLElBQU07UUFDWlcsV0FBV1AseUNBQU0sQ0FBQ0ksV0FBVztJQUVqQyxHQUFHO1FBQUNBO0tBQVc7SUFFZixxQkFDSSw4REFBQ1M7UUFBSUMsT0FBTztZQUNSQyxpQkFBaUJUO1lBQ2pCVSxZQUFZO1lBQ1osc0JBQXNCO1lBQ3RCLG9CQUFvQjtRQUN4QjtrQkFFSSw0RUFBQ0M7WUFBT0MsV0FBVTtzQkFDZDs7b0JBQ0tSLCtCQUNHLDhEQUFDWiwwREFBTUE7d0JBQ0hJLE9BQU9BO3dCQUNQTSxnQkFBZ0JBOzs7Ozs7a0NBR3hCLDhEQUFDWCw0REFBUUE7d0JBQ0xLLE9BQU9BO3dCQUNQQyxVQUFVQTt3QkFDVkksWUFBWUE7d0JBQ1pILFlBQVlBO3dCQUNaQyxnQkFBZ0JBO3dCQUNoQkMsU0FBU0E7d0JBQ1RFLGdCQUFnQkE7d0JBQ2hCQyxtQkFBbUJBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFPM0M7QUFFQSxpRUFBZVIsR0FBR0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2FiYy1hbmltYWxzLy4vc3JjL3BhZ2VzL19hcHAuanM/OGZkYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0ICcuLi9zdHlsZXMvQXBwLmNzcyc7XG5pbXBvcnQgTWFpblZpZXcgZnJvbSAnLi4vY29tcG9uZW50cy9NYWluVmlldydcbmltcG9ydCBTb3VuZHMgZnJvbSAnLi4vY29tcG9uZW50cy9Tb3VuZHMnXG4vLyBpbXBvcnQgeyB1c2VFdmVudENhbGxiYWNrIH0gZnJvbSAnQG1hdGVyaWFsLXVpL2NvcmUnO1xuaW1wb3J0IHsgYW5pbWFscywgY29sb3JzIH0gZnJvbSAnLi4vZGF0YSdcblxuXG5mdW5jdGlvbiBBcHAoKSB7XG5cbiAgICBjb25zdCBbY291bnQsIHNldENvdW50XSA9IHVzZVN0YXRlKDApO1xuICAgIGNvbnN0IFtjb3VudENvb3JzLCBzZXRDb3VudENvbG9yc10gPSB1c2VTdGF0ZSgwKTtcbiAgICBjb25zdCBbYmdDb2xvciwgc2V0QmdDb2xvcl0gPSB1c2VTdGF0ZSgnI2NjZmY5MCcpXG4gICAgY29uc3QgW3Zpc2libGVCdXR0b25zLCBzZXRWaXNpYmxlQnV0dG9uc10gPSB1c2VTdGF0ZSh0cnVlKTtcbiAgICBjb25zdCBbdmlzaWJsZVNvdW5kcywgc2V0VmlzaWJsZVNvdW5kc10gPSB1c2VTdGF0ZSh0cnVlKTtcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIHNldFZpc2libGVTb3VuZHMoZmFsc2UpXG5cbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICBzZXRWaXNpYmxlU291bmRzKHRydWUpXG5cbiAgICAgICAgfSwgMTAwKTtcbiAgICB9LCBbY291bnRdKTtcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIHNldEJnQ29sb3IoY29sb3JzW2NvdW50Q29vcnNdKVxuXG4gICAgfSwgW2NvdW50Q29vcnNdKTtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgc3R5bGU9e3tcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogYmdDb2xvcixcbiAgICAgICAgICAgIHRyYW5zaXRpb246ICdiYWNrZ3JvdW5kLWNvbG9yIDJzIGVhc2Utb3V0JyxcbiAgICAgICAgICAgICctd2Via2l0LXRyYW5zaXRpb24nOiAnYmFja2dyb3VuZC1jb2xvciAycyBlYXNlLW91dCcsXG4gICAgICAgICAgICAnIC1tb3otdHJhbnNpdGlvbic6ICdiYWNrZ3JvdW5kLWNvbG9yIDJzIGVhc2Utb3V0JyxcbiAgICAgICAgfX1cbiAgICAgICAgPlxuICAgICAgICAgICAgPGhlYWRlciBjbGFzc05hbWU9XCJBcHAtaGVhZGVyXCI+XG4gICAgICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgICAgICAge3Zpc2libGVTb3VuZHMgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgPFNvdW5kc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50PXtjb3VudH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aXNpYmxlQnV0dG9ucz17dmlzaWJsZUJ1dHRvbnN9XG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICA8TWFpblZpZXdcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50PXtjb3VudH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHNldENvdW50PXtzZXRDb3VudH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEJnQ29sb3I9e3NldEJnQ29sb3J9XG4gICAgICAgICAgICAgICAgICAgICAgICBjb3VudENvb3JzPXtjb3VudENvb3JzfVxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0Q291bnRDb2xvcnM9e3NldENvdW50Q29sb3JzfVxuICAgICAgICAgICAgICAgICAgICAgICAgYmdDb2xvcj17YmdDb2xvcn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHZpc2libGVCdXR0b25zPXt2aXNpYmxlQnV0dG9uc31cbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFZpc2libGVCdXR0b25zPXtzZXRWaXNpYmxlQnV0dG9uc31cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgIDwvaGVhZGVyPlxuXG4gICAgICAgIDwvZGl2PlxuICAgICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IEFwcDtcbiJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiTWFpblZpZXciLCJTb3VuZHMiLCJhbmltYWxzIiwiY29sb3JzIiwiQXBwIiwiY291bnQiLCJzZXRDb3VudCIsImNvdW50Q29vcnMiLCJzZXRDb3VudENvbG9ycyIsImJnQ29sb3IiLCJzZXRCZ0NvbG9yIiwidmlzaWJsZUJ1dHRvbnMiLCJzZXRWaXNpYmxlQnV0dG9ucyIsInZpc2libGVTb3VuZHMiLCJzZXRWaXNpYmxlU291bmRzIiwic2V0VGltZW91dCIsImRpdiIsInN0eWxlIiwiYmFja2dyb3VuZENvbG9yIiwidHJhbnNpdGlvbiIsImhlYWRlciIsImNsYXNzTmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/pages/_app.js\n");

/***/ }),

/***/ "./src/styles/App.css":
/*!****************************!*\
  !*** ./src/styles/App.css ***!
  \****************************/
/***/ (() => {



/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"react\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n");

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hYmMtYW5pbWFscy8uL25vZGVfbW9kdWxlcy9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/NTc3NyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react-audio-player":
/*!*************************************!*\
  !*** external "react-audio-player" ***!
  \*************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-audio-player");

/***/ }),

/***/ "framer-motion":
/*!********************************!*\
  !*** external "framer-motion" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = import("framer-motion");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./src/pages/_app.js"));
module.exports = __webpack_exports__;

})();